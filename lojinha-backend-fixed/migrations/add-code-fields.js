const sequelize = require("../config/database");

async function addCodeFields() {
  try {
    console.log("üîÑ Adicionando campos de c√≥digo aos modelos...");

    // Verificar se as colunas j√° existem
    const tables = ["users", "clients", "credit_payments"];

    for (const table of tables) {
      try {
        // Tentar adicionar coluna sem UNIQUE primeiro
        await sequelize.query(`
          ALTER TABLE ${table} ADD COLUMN code VARCHAR(255);
        `);
        console.log(`‚úÖ Campo 'code' adicionado √† tabela '${table}'`);

        // Depois criar √≠ndice √∫nico
        await sequelize.query(`
          CREATE UNIQUE INDEX idx_${table}_code ON ${table}(code);
        `);
        console.log(`‚úÖ √çndice √∫nico criado para '${table}.code'`);
      } catch (error) {
        if (
          error.message.includes("duplicate column name") ||
          error.message.includes("column already exists")
        ) {
          console.log(`‚ÑπÔ∏è  Campo 'code' j√° existe na tabela '${table}'`);
        } else if (error.message.includes("index already exists")) {
          console.log(`‚ÑπÔ∏è  √çndice √∫nico j√° existe para '${table}.code'`);
        } else {
          console.log(
            `‚ö†Ô∏è  Erro ao processar tabela '${table}':`,
            error.message
          );
        }
      }
    }

    console.log("üéâ Migra√ß√£o conclu√≠da com sucesso!");
  } catch (error) {
    console.error("‚ùå Erro na migra√ß√£o:", error.message);
    throw error;
  }
}

// Executar migra√ß√£o se chamado diretamente
if (require.main === module) {
  addCodeFields()
    .then(() => {
      console.log("‚úÖ Migra√ß√£o finalizada");
      process.exit(0);
    })
    .catch((error) => {
      console.error("‚ùå Erro na migra√ß√£o:", error);
      process.exit(1);
    });
}

module.exports = addCodeFields;
